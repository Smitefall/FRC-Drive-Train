package frc.robot;

import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;

import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.PneumaticsModuleType;
import edu.wpi.first.wpilibj.TimedRobot;
import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.motorcontrol.MotorControllerGroup;


public class Robot extends TimedRobot {


   //Right Motors
   private final WPI_VictorSPX rightMotor1 = new WPI_VictorSPX(0);
   private final WPI_VictorSPX rightMotor2 = new WPI_VictorSPX(1);

   //Left Motors
   private final WPI_VictorSPX leftMotor1 = new WPI_VictorSPX(2);
   private final WPI_VictorSPX leftMotor2 = new WPI_VictorSPX(3);

   //Speed Controller Groups
   private final MotorControllerGroup rightMotorControllerGroup = new MotorControllerGroup(rightMotor1, rightMotor2);
   private final MotorControllerGroup leftMotorControllerGroup = new MotorControllerGroup(leftMotor1, leftMotor2);

   //Drive Train
   private final DifferentialDrive drivetrain = new DifferentialDrive(rightMotorControllerGroup, leftMotorControllerGroup);

   //Joystick
   private final Joystick stick = new Joystick(0);

   //XboxController
   private final XboxController xbox = new XboxController(1);

   //Pneumatics
   private final Compressor comp = new Compressor(null);
   private final DoubleSolenoid solenoid = new DoubleSolenoid(PneumaticsModuleType.CTREPCM, 0, 4);
   
  @Override
  public void robotInit() {}

  @Override
  public void robotPeriodic() {}

  @Override
  public void autonomousInit() {}

  @Override
  public void autonomousPeriodic() {}

  @Override
  public void teleopInit() {

    comp.disable();

  }

  @Override
  public void teleopPeriodic() {

        drivetrain.arcadeDrive(stick.getY(), stick.getX(), true);
        

    if (xbox.getLeftBumperPressed()){
      solenoid.set(DoubleSolenoid.Value.kForward);
    } else if (xbox.getRightBumperPressed()){
      solenoid.set(DoubleSolenoid.Value.kForward);
    }

    if (xbox.getAButton()){
      comp.enableDigital();
    } else if (xbox.getBButton()){
      comp.disable();
    }
  }

  @Override
  public void disabledInit() {}

  @Override
  public void disabledPeriodic() {}

  @Override
  public void testInit() {}
  
  @Override
  public void testPeriodic() {}

  @Override
  public void simulationInit() {}

  @Override
  public void simulationPeriodic() {}
}
